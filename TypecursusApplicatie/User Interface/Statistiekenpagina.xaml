<UserControl x:Class="TypecursusApplicatie.Statistiekenpagina"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:TypecursusApplicatie">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
        <local:BooleanToInverseVisibilityConverter x:Key="BoolToInverseVisConverter"/>
        <local:BooleanToGrayConverter x:Key="BoolToGrayConverter"/>
        <local:CompletionStatusToColorConverter x:Key="CompletionStatusToColorConverter"/>
        <Style x:Key="LinkButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Blue"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock TextDecorations="Underline" Text="{TemplateBinding Content}" HorizontalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SidebarButtonStyle" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10"/>
        </Style>
        <Style x:Key="LogoHoverStyle" TargetType="Border">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#A2B1CB"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <DockPanel LastChildFill="True">
        <!-- Header -->
        <Border DockPanel.Dock="Top" Background="Gray" Height="60">
            <DockPanel HorizontalAlignment="Stretch">
                <ToggleButton x:Name="SidebarToggle" Content="☰" Width="60" Height="60" DockPanel.Dock="Left" Click="SidebarToggle_Click"/>
                <Border DockPanel.Dock="Right" HorizontalAlignment="Right" Style="{StaticResource LogoHoverStyle}" MouseDown="Logo_Click">
                    <Image Source="/Images/Logo2.png" Width="60" Height="60"/>
                </Border>
            </DockPanel>
        </Border>

        <!-- Sidebar -->
        <DockPanel x:Name="Sidebar" DockPanel.Dock="Left" Background="Gray" Width="0">
            <StackPanel DockPanel.Dock="Top">
                <Button Content="Home" Style="{StaticResource SidebarButtonStyle}" Click="HomeButton_Click" Width="100" HorizontalAlignment="Center"/>
                <ComboBox Width="180" Margin="10"
  ItemsSource="{Binding Path=Levels, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
  SelectionChanged="ComboBox_SelectionChanged">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding LevelNaam}" Margin="5" Foreground="{Binding IsUnlocked, Converter={StaticResource BoolToGrayConverter}}" />
                                <Image Source="/Images/lock-icon-2.png" Width="20" Height="20" Visibility="{Binding IsUnlocked, Converter={StaticResource BoolToInverseVisConverter}}" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>

            <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,10">
                <StackPanel x:Name="LoggedInPanel" Visibility="{Binding Path=IsUserLoggedIn, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}, Converter={StaticResource BoolToVisConverter}}" Orientation="Horizontal">
                    <Button Content="Account" Style="{StaticResource SidebarButtonStyle}" Click="AccountButton_Click" Visibility="{Binding IsUserLoggedIn, Converter={StaticResource BoolToVisConverter}}"/>
                    <Button Content="Uitloggen" Style="{StaticResource SidebarButtonStyle}" Click="LogoutButton_Click" Visibility="{Binding IsUserLoggedIn, Converter={StaticResource BoolToVisConverter}}"/>
                </StackPanel>
                <StackPanel x:Name="LoggedOutPanel" Visibility="{Binding Path=IsNotLoggedIn, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}, Converter={StaticResource BoolToVisConverter}}"  Orientation="Horizontal">
                    <Button Content="Inloggen" Style="{StaticResource SidebarButtonStyle}" Click="LoginButton_Click" Visibility="{Binding IsNotLoggedIn, Converter={StaticResource BoolToVisConverter}}"/>
                    <Button Content="Registreren" Style="{StaticResource SidebarButtonStyle}" Click="RegisterButton_Click" Visibility="{Binding IsNotLoggedIn, Converter={StaticResource BoolToVisConverter}}"/>
                </StackPanel>
            </StackPanel>
        </DockPanel>

        <!-- Main Content Area -->
        <Grid DockPanel.Dock="Top" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <!-- User info takes one-third of space -->
                <ColumnDefinition Width="3*"/>
                <!-- Graph takes two-thirds of space -->
            </Grid.ColumnDefinitions>

            <!-- User Information Section -->
            <Border Grid.Column="0" BorderBrush="Black" BorderThickness="1" Padding="10" Margin="10">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="Naam:" FontSize="16" FontWeight="Bold" Margin="5"/>
                    <TextBlock x:Name="VoornaamTextBlock" FontSize="16" Margin="5"/>

                    <TextBlock Text="Achternaam:" FontSize="16" FontWeight="Bold" Margin="5"/>
                    <TextBlock x:Name="AchternaamTextBlock" FontSize="16" Margin="5"/>

                    <TextBlock Text="E-mailadres:" FontSize="14" FontWeight="Bold" Margin="5"/>
                    <TextBlock x:Name="EmailadresTextBlock" FontSize="14" Margin="5"/>

                    <TextBlock Text="Aantal behaalde modules:" FontSize="14" FontWeight="Bold" Margin="5"/>
                    <TextBlock x:Name="CompletedModulesCount" FontSize="14" Margin="5"/>

                    <TextBlock Text="Aantal behaalde badges:" FontSize="14" FontWeight="Bold" Margin="5"/>
                    <TextBlock x:Name="CompletedLevelsCount" FontSize="14" Margin="5"/>

                    <Button Content="Badges" Width="100" Margin="10" Click="BadgesButton_Click"/>
                </StackPanel>
            </Border>



            <!-- Graph Section -->
            <Border Grid.Column="1" BorderBrush="Black" BorderThickness="1" Padding="10" Margin="10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <!-- Navigation buttons row -->
                        <RowDefinition Height="*"/>
                        <!-- Graph row -->
                    </Grid.RowDefinitions>

                    <!-- Navigation Buttons -->
                    <DockPanel Grid.Row="0" HorizontalAlignment="Center" Margin="0,0,0,10">
                        <Button Content="&lt;" Width="40" Height="40" Click="PreviousDataPointsButton_Click"/>
                        <Button Content="&gt;" Width="40" Height="40" Click="NextDataPointsButton_Click" Margin="10,0,0,0"/>
                    </DockPanel>

                    <!-- Cartesian Chart -->
                    <lvc:CartesianChart Grid.Row="1" x:Name="WpmChart" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <!-- Chart configuration as per the original working graph -->
                        <lvc:CartesianChart.Series>
                            <lvc:LineSeries Title="WPM" Values="{Binding ChartValues}" PointGeometrySize="10"/>
                        </lvc:CartesianChart.Series>
                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis Title="Tijdlijn" Labels="{Binding TimeLabels}"/>
                        </lvc:CartesianChart.AxisX>
                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Title="WPM"/>
                        </lvc:CartesianChart.AxisY>
                    </lvc:CartesianChart>
                </Grid>
            </Border>
        </Grid>
    </DockPanel>
</UserControl>